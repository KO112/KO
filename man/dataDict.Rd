% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Data_Dictionary.R
\name{dataDict}
\alias{dataDict}
\title{Create a Data Dictionary}
\usage{
dataDict(df, table = FALSE, lazyTable = TRUE, verbose = Inf)
}
\arguments{
\item{df}{The data.frame-like object to calculate information for (should be a name, not an expression).}

\item{table}{Whether or not to tabulate each column (logical scalar).}

\item{lazyTable}{Whether or not to enable lazy table mode (see below for more) (logical scalar).}

\item{verbose}{How verbose you want the function to be (higher prints more information) (integer scalar).}
}
\value{
A \code{dataDict} object.
}
\description{
Create a data dictionary object which holds information on the columns of a data.frame-like object.
}
\details{
The \code{df} parameter should be the name of a data.frame-like object, as opposed to an expression.
E.g. call the function as \code{dataDict(mtcars)}, instead of \code{dataDict(as_tibble(mtcars))}.
This will allow for more functionality, and will help avoid errors, especially when lazy table mode is active.
If you want to pass an expression, simple ones should work, but do so at your own risk.

Lazy table mode means that columns are not tabulated until requested.
When they are tabulated, they can be done one at a time, or all together.
This setting is useful since this can take a long time for large datasets.

If \code{verbode > 0} (or not \code{FALSE}), a message will be printed out when lazy table mode is active,
  as well as when \code{df} is passed as an expression .
}
\examples{
dd <- dataDict(mtcars)
dd <- dataDict(mtcars, table = TRUE)
dd <- dataDict(mtcars, table = TRUE, lazyTable = FALSE)
dd <- dataDict(mtcars, table = TRUE, lazyTable = FALSE, verbose = 0)

}
